// Generated by CoffeeScript 1.7.1
(function() {
  var BawsConnection;

  BawsConnection = (function() {
    function BawsConnection(server) {
      this.handlers = {};
      this.socket = new WebSocket("ws://" + server + "/");
      this.socket.onmessage = (function(_this) {
        return function(e) {
          var handler, obj, _i, _j, _len, _len1, _ref, _ref1, _results;
          obj = JSON.parse(e.data);
          console.log(obj);
          if ('error' in obj) {
            console.log("ERROR >> " + obj.error);
            if ('error' in _this.handlers) {
              _ref = _this.handlers['error'];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                handler = _ref[_i];
                handler(obj);
              }
            }
          }
          if ('op' in obj && obj.op in _this.handlers) {
            _ref1 = _this.handlers[obj.op];
            _results = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              handler = _ref1[_j];
              _results.push(handler(obj));
            }
            return _results;
          }
        };
      })(this);
      this.socket.onopen = (function(_this) {
        return function(e) {
          var handler, _i, _len, _ref, _results;
          _ref = _this.handlers['_open'];
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            handler = _ref[_i];
            _results.push(handler({
              op: '_open'
            }));
          }
          return _results;
        };
      })(this);
    }

    BawsConnection.prototype.on = function(op, cb) {
      if (this.handlers[op] == null) {
        this.handlers[op] = [];
      }
      return this.handlers[op].push(cb);
    };

    BawsConnection.prototype.send = function(op, obj) {
      obj || (obj = {});
      obj.op = op;
      return this.socket.send(JSON.stringify(obj));
    };

    return BawsConnection;

  })();

  window.BawsConnection = BawsConnection;

}).call(this);
